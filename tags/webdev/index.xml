<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>webdev on Ajdin&#39;s blog about security and development</title>
    <link>https://ajdin.io/tags/webdev/</link>
    <description>Recent content in webdev on Ajdin&#39;s blog about security and development</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© {year}</copyright>
    <lastBuildDate>Sun, 30 Aug 2020 10:50:14 +0200</lastBuildDate>
    
	<atom:link href="https://ajdin.io/tags/webdev/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Connecting and using PostgreSQL to a NodeJS app</title>
      <link>https://ajdin.io/posts/pg/</link>
      <pubDate>Sun, 30 Aug 2020 10:50:14 +0200</pubDate>
      
      <guid>https://ajdin.io/posts/pg/</guid>
      <description>Quick intro This is a short blog post on how to connect Postgres to a NodeJS app. This isn&amp;rsquo;t that hard to do but I figured I might as well write it down as I&amp;rsquo;m going to be doing this a lot in the future.
Postgres quick intro Connecting to Postgres # Switch to the postgres user sudo -iu postgres # Connect to psql psql  Psql commands  \l - list all databases \dt - list all tables in current database \c database_name - connect to a specific database  Executing pg queries from NodeJS First we need to install a npm package called pg.</description>
    </item>
    
    <item>
      <title>Building Worklog: a PERN stack web application</title>
      <link>https://ajdin.io/posts/worklog/</link>
      <pubDate>Sat, 18 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ajdin.io/posts/worklog/</guid>
      <description>Introduction I’ll be building a simple web application to log workers&amp;rsquo; activity. I’ll be using PostgresSQL for database, React for front end and Express for routing the app.
Functionality For user:
 Log work time, location, job details Calculate pay/wage automatically  For admin:
 See all current working users See all jobs done by time/category/location etc. Automate the boring stuff  Setting up the environment I’m running Arch Linux, so this part will be Linux specific.</description>
    </item>
    
  </channel>
</rss>